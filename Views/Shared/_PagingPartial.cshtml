@*
    ///Triển khai trên trang cshtml
    @{
        Paging paging = new Paging()
        {
           TotalRecord = 188,
           CurrentPage = 7,
            Limit = 30,
            Param = "name=Nguyen Xuan Quy&value=10",
            Action = "Index"
        };
    }

    <partial name="_PagingPartial" model="@paging" />
*@




@model Paging 

@{
    int totalRecord = Model.TotalRecord;
    int currentPage = Model.CurrentPage;
    int limit = Model.Limit;
    string action = Model.Action;
    string? param = Model.Param;

    int totalPage = (int)Math.Ceiling((double)totalRecord / (double)limit);

    var generateUrl = (int? p = null) =>
    {
        string s = Url.Action(action, new { p = p}) + param;
        return Url.Content(s);

    };
    if(totalPage <= 1)
    {
        return;
    }
    currentPage = currentPage <= 0 ? 1 : currentPage;
    currentPage = currentPage > totalPage ? totalPage : currentPage;



    int pre = currentPage == 1 ? 1 : currentPage - 1;
    int next = currentPage == totalPage ? totalPage : currentPage + 1;



    var display = 3;    // Hiển thị sang 2 bên
    var total = display * 2;
    List<int> page = new List<int>();

    if(total+1 > totalPage)
    {
        for (int i = 1; i <= totalPage; i++)
        {
            page.Add(i);
        };
    }
    else if(currentPage - display > 0 && currentPage + display <= totalPage)
    {
        for (int i = 0; i <= total; i++)
        {
            page.Add(currentPage - display + i);
        }
    }
    else if (currentPage - display > 0 && currentPage + display > totalPage)
    {
        for (int i = 0; i <= total; i++){
            page.Insert(0, totalPage - i);
        };
    }
    else // if (currentPage - display <= 0 && currentPage + display <= totalPage)
    {
        for (int i = 0; i <= total; i++)
        {
            page.Add(i+1);
        };
    }


}
    <nav class="d-flex justify-content-between align-items-center">
        @*Previous*@
    <ul class="pagination">
            @if(currentPage == 1)
            {
                <li class="page-item disabled">
                <span class="page-link"><i class="fa-solid fa-angle-left"></i></span>
                </li>
            }
            else
            {
                <li class="page-item">
                <a class="page-link" href="@generateUrl(pre)"><i class="fa-solid fa-angle-left"></i></a>
                </li>
            }

            @*Page*@
            @foreach(int i in page)
            {
                if(currentPage == i)
                {
                    <li class="page-item active" aria-current="page">
                    <a class="page-link text-white" href="@generateUrl(i)">@i</a>
                    </li>
                }
                else
                {
                    <li class="page-item" aria-current="page">
                    <a class="page-link" href="@generateUrl(i)">@i</a>
                    </li>
                }
            }

            @*Next*@
            @if (currentPage == totalPage)
            {
                <li class="page-item disabled">
                    <span class="page-link"><i class="fa-solid fa-angle-right"></i></span>
                </li>
            }
            else
            {
                <li class="page-item">
                    <a class="page-link" href="@generateUrl(next)"><i class="fa-solid fa-angle-right"></i></a>
                </li>
            }

        </ul>
    <span class="text-secondary">@totalPage trang</span>
    </nav>

            